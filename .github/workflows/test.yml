name: Test WireGuard Installation

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    if: github.repository == 'taimurey/wireguard-install'
    strategy:
      matrix:
        container:
          - "ubuntu:22.04"
          - "debian:11"
          - "debian:12"
          - "fedora:39"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            apt-transport-https \
            ca-certificates \
            curl \
            gnupg-agent \
            software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io
          sudo systemctl start docker

      - name: Setup Docker in Docker
        run: |
          sudo mkdir -p /etc/docker
          echo '{
            "experimental": true,
            "features": {
              "buildkit": true
            },
            "storage-driver": "overlay2"
          }' | sudo tee /etc/docker/daemon.json
          sudo systemctl restart docker

      - name: Test WireGuard Installation (Debian/Ubuntu)
        if: contains(matrix.container, 'ubuntu') || contains(matrix.container, 'debian')
        run: |
          # Create test container
          docker run -d --privileged \
            --name test-container \
            -v ${{ github.workspace }}:/workspace \
            -v /var/run/docker.sock:/var/run/docker.sock \
            ${{ matrix.container }}

          # Install required packages
          docker exec test-container bash -c '
            apt-get update && \
            DEBIAN_FRONTEND=noninteractive apt-get install -y \
              curl \
              sudo \
              systemd \
              systemd-sysv \
              git \
              docker.io'

          # Run installation
          docker exec test-container bash -c '
            cd /workspace && \
            chmod +x wireguard-manager.sh && \
            ./wireguard-manager.sh auto_install=true'

          # Verify WireGuard is running
          docker exec test-container bash -c '
            docker ps | grep -q wireguard && \
            echo "WireGuard is running" && \
            exit 0 || \
            (echo "WireGuard failed to start" && exit 1)'

      - name: Test WireGuard Installation (Fedora)
        if: contains(matrix.container, 'fedora')
        run: |
          # Create test container
          docker run -d --privileged \
            --name test-container \
            -v ${{ github.workspace }}:/workspace \
            -v /var/run/docker.sock:/var/run/docker.sock \
            ${{ matrix.container }}

          # Install required packages
          docker exec test-container bash -c '
            dnf install -y curl sudo systemd systemd-sysv git docker'

          # Run installation
          docker exec test-container bash -c '
            cd /workspace && \
            chmod +x wireguard-manager.sh && \
            ./wireguard-manager.sh auto_install=true'

          # Verify WireGuard is running
          docker exec test-container bash -c '
            docker ps | grep -q wireguard && \
            echo "WireGuard is running" && \
            exit 0 || \
            (echo "WireGuard failed to start" && exit 1)'

      - name: Display Docker Logs
        if: always()
        run: |
          echo "Docker containers:"
          docker ps -a
          echo "WireGuard container logs:"
          docker exec test-container bash -c 'docker logs wireguard || true'

      - name: Cleanup
        if: always()
        run: |
          docker stop test-container || true
          docker rm test-container || true
          docker system prune -af
